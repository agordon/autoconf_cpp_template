Autotools Template for a CPP-based program

Copyright (C) 2012    A. Gordon (gordon at cshl dot edu)

LICENCE: GPLv3+

Joshiki
-------
To use this template, you should be familiar with the autotools programs (autoconf, automake, etc.).
A good place to start is The AutoTools book: http://nostarch.com/autotools.htm .

TODO when you start a new project
---------------------------------
1. Change you package name in "configure.ac"
2. Create a git repository, use "git tag -a v0.1" to tag a version
   (it will be used automatically next time you run "./reconf")
3. If you need "libtool", enable it in "reconf" and "configure.ac"
4. If you need "boost", enable it in "configure.ac" and "src/Makefile.am"
5. Change the name of binary program in "src/Makefile.am"
6. update ".gitignore" as necessary
7. If you've cloned this program, delete the ".git" directory and start fresh with "git init"


The following should work fine
------------------------------
1. ./reconf
   only needed if you're a developer, and added new source files or updated "configure.ac"

2. ./configure
   standard way to build the package. supports the standard "autoconf" options (like --prefix)

3. make
   compiles the source files in "./src"

4. (sudo) make install
   install the program to "/usr/local/bin" (or other specified locations)

5. make check
   will compile the test programs in "./tests" and run them.
   all tests should pass.

6. make dist
   build a new tarball for distribution/release.
   It will use the latest "git tag" as version number.

7. make distcheck
   Verifies that the distribution package is OK (e.g. no missing files).


Important Files
---------------

1. AUTHORS, NEWS, THANKS, ChangeLog, README - update as needed.

2. configure.ac -
	All the project's configuration settings.

3. ./src/* - the main source files.
        If you add new source files, update "./src/Makefile.am"

4. ./tests/* - the unit-testing files.
        If you add new source files, update "./tests/Makefile.am"

5. config/* -
	build-support files.
	Most are auto-generated by "reconf" (linked from other sourceS).
	"git-version-gen" is fixed.
	This directory is sometimes called "build-aux" in other projects.

6. m4/*
	M4 macros to detect proper build settings (things like STD::TR1, BOOST, etc).
	Many more macros are available at the Autoconf-Archive ( http://www.gnu.org/software/autoconf-archive/ )

